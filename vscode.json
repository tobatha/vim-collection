
// .vimrc
"vim.easymotion": true,
"vim.incsearch": true,
"vim.useSystemClipboard": true,
"vim.useCtrlKeys": true,
"vim.insertModeKeyBindings": [
    {
        "before": ["j", "j"],
        "after": ["<Esc>"],
    }
],
"vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
},
"vim.normalModeKeyBindingsNonRecursive": [
    {
        "before": ["S-Tab"],
        "commands": ["editor.action.outdentLines"],
    },
    {
        "before": ["Tab"],
        "commands": ["editor.action.indentLines"],
    },
    {
        "before": ["∆"],
        "commands": ["editor.action.moveLinesDownAction"],
    },
    {
        "before": ["˚"],
        "commands": ["editor.action.moveLinesUpAction"],
    },
],
"vim.insertModeKeyBindingsNonRecursive": [
    {
        "before": ["∆"],
        "commands": ["editor.action.moveLinesDownAction"],
    },
    {
        "before": ["˚"],
        "commands": ["editor.action.moveLinesUpAction"],
    },
],
"vim.visualModeKeyBindingsNonRecursive": [
    {
        "before": ["∆"],
        "commands": ["editor.action.moveLinesDownAction"],
    },
    {
        "before": ["˚"],
        "commands": ["editor.action.moveLinesUpAction"],
    },
],


// vscode settings.json (User)
{
    "editor.minimap.enabled": false,
    "explorer.confirmDragAndDrop": false,
    "editor.wordWrap": "on",
    "editor.fontLigatures": true,
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": [
                    "comment",
                    "keyword",
                    "constant",
                    "storage",
                    "entity.name.type",
                    "entity.name.class.js",
                    "entity.name.method.js",
                    "entity.name.tag.doctype",
                    "entity.name.function",
                    "entity.name.section.markdown",
                    "entity.other.attribute-name",
                    "entity.other.attribute-name.tag.jade",
                    "entity.other.attribute-name.tag.pug",
                ],
                "settings": {
                    "fontStyle": "italic",
                }
            },
            {
                "scope": [
                    "invalid",
                    "keyword.operator",
                    "keyword.other.unit.px.css",
                    "constant.numeric.css",
                    "constant.numeric.decimal.js",
                    "constant.numeric.json",
                ],
                "settings": { 
                    "fontStyle": "",
                }
            }
        ],
    },
    "[dart]": {
        "editor.formatOnSave": true,
        "editor.formatOnType": true,
        "editor.rulers": [
            80
        ],
        "editor.selectionHighlight": false,
        "editor.suggest.snippetsPreventQuickSuggestions": false,
        "editor.suggestSelection": "first",
        "editor.tabCompletion": "onlySnippets",
        "editor.wordBasedSuggestions": false
    },
    "workbench.startupEditor": "none",
    "explorer.confirmDelete": false,
    "security.workspace.trust.untrustedFiles": "open",
    "dart.showInspectorNotificationsForWidgetErrors": false,
    "json.maxItemsComputed": 999999,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb"
    },
    "python.pythonPath": "/usr/bin/python",
    "python.defaultInterpreterPath": "/usr/bin/python3",
    "workbench.iconTheme": "material-icon-theme",
    "vetur.validation.template": false,
    "vetur.validation.script": false,
    "vetur.validation.style": false,
    "editor.lineHeight": 1.3,
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "extensions.ignoreRecommendations": true,

    "editor.tabCompletion": "on",

    "vim.hlsearch": true,
    "vim.leader": "<Space>",
    "vim.useSystemClipboard": true,
    "vim.insertModeKeyBindings": [{
        "before": ["j", "j"],
        "after": ["<Esc>"]
    }],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": ["<leader>", "w"],
            "commands": ["workbench.action.splitEditor"]
        },
    ],
    "vim.normalModeKeyBindings": [
        { "before": ["<Tab>"], "commands": ["editor.action.indentLines"] },
        { "before": ["<Shift+Tab>"], "commands": ["editor.action.outdentLines"] }
    ],
    "vim.visualModeKeyBindings": [
        { "before": ["<Tab>"], "commands": ["editor.action.indentLines"] },
        { "before": ["<Shift+Tab>"], "commands": ["editor.action.outdentLines"] }
    ],
    "vim.handleKeys": {
        "<C-d>": true,
        "<C-v>": false,
        "<C-c>": false,
    },
    "terminal.integrated.fontFamily": "SauceCodePro Nerd Font Mono",
    "editor.fontFamily": "'Dank Mono', Menlo, Monaco, 'Courier New', monospace",
    "terminal.integrated.defaultProfile.osx": "zsh",
}


// vscode keybindings.json
// Place your key bindings in this file to override the defaults
// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },

    {
        "key": "ctrl+h", 
        "command": "workbench.action.navigateLeft", 
    },
    {
        "key": "ctrl+l", 
        "command": "workbench.action.navigateRight", 
    },
    {
        "key": "ctrl+k", 
        "command": "workbench.action.navigateUp", 
    },
    {
        "key": "ctrl+j", 
        "command": "workbench.action.navigateDown", 
    },
    {
        "key": "cmd+o", 
        "command": "workbench.action.showEditorsInActiveGroup", 
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "cmd+enter",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+e",
        "command": "-extension.vim_ctrl+e",
        "when": "editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"
    },
    {
        "key": "alt+n",
        "command": "explorer.newFile",
    },
    {
        "key": "alt+m",
        "command": "explorer.newFolder",
    },
    {
        "key": "ctrl+j",
        "command": "cursorDown",
        "when": "textInputFocus && vim.active && vim.mode == 'Insert'",
    },
    {
        "key": "ctrl+k",
        "command": "cursorUp",
        "when": "textInputFocus && vim.active && vim.mode == 'Insert'",
    },
    {
        "key": "ctrl+h",
        "command": "cursorLeft",
        "when": "textInputFocus && vim.active && vim.mode == 'Insert'",
    },
    {
        "key": "ctrl+l",
        "command": "cursorRight",
        "when": "textInputFocus && vim.active && vim.mode == 'Insert'",
    },
    {
        "key": "ctrl+n",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+d",
        "command": "-list.focusPageDown",
        "when": "listFocus && !inputFocus"
    },
]
